digraph cnn_tree {
images [shape=box, label="images\n net segment id: 0\n id: 0 type: 45\ntype name: Preprocess\n input size: 1*3*640*640\n output size: 1*3*640*640\ninDdr5dPitch[0]: (0x12c000, 0x64000, 0x280, 0x8, 0x8)\ninUbFromDdr5dPitch[0]: (0xa00, 0xa00, 0xa00, 0x20, 0x8)\ninUbFromUb5dPitch[0]: (0xa00, 0xa00, 0xa00, 0x20, 0x8)\noutDdr5dPitch[0]: (0x320000, 0x320000, 0x1400, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0xa00, 0xa00, 0xa00, 0x20, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x1400, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [1-4]-[8-8]\n bond([ub-ub]): [4]-[8]"];
images -> _model_0_conv_Conv;
_model_0_conv_Conv [shape=box, label="/model.0/conv/Conv\n net segment id: 0\n id: 1 type: 0\ntype name: Convolution\n input size: 1*3*640*640\n output size: 1*32*320*320\ninDdr5dPitch[0]: (0x320000, 0x320000, 0x1400, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x1400, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x1400, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x320000, 0xc8000, 0xa00, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x1400, 0x5000, 0x80, 0x10)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_0_conv_Conv -> _model_0_act_Mul;
_model_0_act_Mul [shape=box, label="/model.0/act/Mul\n net segment id: 0\n id: 2 type: 146\ntype name: VectorCombine\n input size: 1*32*320*320\n output size: 1*32*320*320\ninDdr5dPitch[0]: (0x320000, 0xc8000, 0xa00, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0x1400, 0x5000, 0x80, 0x10)\ninUbFromUb5dPitch[0]: (0x5000, 0x1400, 0x5000, 0x80, 0x10)\noutDdr5dPitch[0]: (0x320000, 0xc8000, 0xa00, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_0_act_Mul -> _model_1_conv_Conv;
_model_1_conv_Conv [shape=box, label="/model.1/conv/Conv\n net segment id: 0\n id: 3 type: 0\ntype name: Convolution\n input size: 1*32*320*320\n output size: 1*64*160*160\ninDdr5dPitch[0]: (0x320000, 0xc8000, 0xa00, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_1_conv_Conv -> _model_2_cv1_conv_Conv;
_model_1_conv_Conv -> _model_2_cv2_conv_Conv;
_model_2_cv1_conv_Conv [shape=box, label="/model.2/cv1/conv/Conv\n net segment id: 0\n id: 4 type: 0\ntype name: Convolution\n input size: 1*64*160*160\n output size: 1*32*160*160\ninDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_2_cv1_conv_Conv -> _model_2_m_m_0_cv1_conv_Conv;
_model_2_cv1_conv_Conv -> _model_2_m_m_0_Add;
_model_2_m_m_0_cv1_conv_Conv [shape=box, label="/model.2/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 5 type: 0\ntype name: Convolution\n input size: 1*32*160*160\n output size: 1*32*160*160\ninDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_2_m_m_0_cv1_conv_Conv -> _model_2_m_m_0_cv2_conv_Conv;
_model_2_m_m_0_cv2_conv_Conv [shape=box, label="/model.2/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 6 type: 0\ntype name: Convolution\n input size: 1*32*160*160\n output size: 1*32*160*160\ninDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_2_m_m_0_cv2_conv_Conv -> _model_2_m_m_0_Add;
_model_2_m_m_0_Add [shape=box, label="/model.2/m/m.0/Add\n net segment id: 0\n id: 7 type: 27\ntype name: Eltwise\n input size: 1*32*160*160\n output size: 1*32*160*160\ninDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_2_m_m_0_Add -> _model_2_Concat;
_model_2_cv2_conv_Conv [shape=box, label="/model.2/cv2/conv/Conv\n net segment id: 0\n id: 8 type: 0\ntype name: Convolution\n input size: 1*64*160*160\n output size: 1*32*160*160\ninDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_2_cv2_conv_Conv -> _model_2_Concat;
_model_2_Concat [shape=box, label="/model.2/Concat\n net segment id: 0\n id: 9 type: 38\ntype name: Concat\n input size: 1*32*160*160\n output size: 1*64*160*160\ninDdr5dPitch[0]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0xc8000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x500, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0xa00, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_2_Concat -> _model_2_cv3_conv_Conv;
_model_2_cv3_conv_Conv [shape=box, label="/model.2/cv3/conv/Conv\n net segment id: 0\n id: 10 type: 0\ntype name: Convolution\n input size: 1*64*160*160\n output size: 1*64*160*160\ninDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_2_cv3_conv_Conv -> _model_3_conv_Conv;
_model_3_conv_Conv [shape=box, label="/model.3/conv/Conv\n net segment id: 0\n id: 11 type: 0\ntype name: Convolution\n input size: 1*64*160*160\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0x190000, 0x32000, 0x500, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0xa00, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_3_conv_Conv -> _model_4_cv1_conv_Conv;
_model_3_conv_Conv -> _model_4_cv2_conv_Conv;
_model_4_cv1_conv_Conv [shape=box, label="/model.4/cv1/conv/Conv\n net segment id: 0\n id: 12 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_cv1_conv_Conv -> _model_4_m_m_0_cv1_conv_Conv;
_model_4_cv1_conv_Conv -> _model_4_m_m_0_Add;
_model_4_m_m_0_cv1_conv_Conv [shape=box, label="/model.4/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 13 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_m_m_0_cv1_conv_Conv -> _model_4_m_m_0_cv2_conv_Conv;
_model_4_m_m_0_cv2_conv_Conv [shape=box, label="/model.4/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 14 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_m_m_0_cv2_conv_Conv -> _model_4_m_m_0_Add;
_model_4_m_m_0_Add [shape=box, label="/model.4/m/m.0/Add\n net segment id: 0\n id: 15 type: 27\ntype name: Eltwise\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_4_m_m_0_Add -> _model_4_m_m_1_cv1_conv_Conv;
_model_4_m_m_0_Add -> _model_4_m_m_1_Add;
_model_4_m_m_1_cv1_conv_Conv [shape=box, label="/model.4/m/m.1/cv1/conv/Conv\n net segment id: 0\n id: 16 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_m_m_1_cv1_conv_Conv -> _model_4_m_m_1_cv2_conv_Conv;
_model_4_m_m_1_cv2_conv_Conv [shape=box, label="/model.4/m/m.1/cv2/conv/Conv\n net segment id: 0\n id: 17 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_m_m_1_cv2_conv_Conv -> _model_4_m_m_1_Add;
_model_4_m_m_1_Add [shape=box, label="/model.4/m/m.1/Add\n net segment id: 0\n id: 18 type: 27\ntype name: Eltwise\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_4_m_m_1_Add -> _model_4_Concat;
_model_4_cv2_conv_Conv [shape=box, label="/model.4/cv2/conv/Conv\n net segment id: 0\n id: 19 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_cv2_conv_Conv -> _model_4_Concat;
_model_4_Concat [shape=box, label="/model.4/Concat\n net segment id: 0\n id: 20 type: 38\ntype name: Concat\n input size: 1*64*80*80\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_4_Concat -> _model_4_cv3_conv_Conv;
_model_4_cv3_conv_Conv [shape=box, label="/model.4/cv3/conv/Conv\n net segment id: 0\n id: 21 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_4_cv3_conv_Conv -> _model_5_conv_Conv;
_model_4_cv3_conv_Conv -> _model_16_Concat;
_model_5_conv_Conv [shape=box, label="/model.5/conv/Conv\n net segment id: 0\n id: 22 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_5_conv_Conv -> _model_6_cv1_conv_Conv;
_model_5_conv_Conv -> _model_6_cv2_conv_Conv;
_model_6_cv1_conv_Conv [shape=box, label="/model.6/cv1/conv/Conv\n net segment id: 0\n id: 23 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_cv1_conv_Conv -> _model_6_m_m_0_cv1_conv_Conv;
_model_6_cv1_conv_Conv -> _model_6_m_m_0_Add;
_model_6_m_m_0_cv1_conv_Conv [shape=box, label="/model.6/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 24 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_0_cv1_conv_Conv -> _model_6_m_m_0_cv2_conv_Conv;
_model_6_m_m_0_cv2_conv_Conv [shape=box, label="/model.6/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 25 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_0_cv2_conv_Conv -> _model_6_m_m_0_Add;
_model_6_m_m_0_Add [shape=box, label="/model.6/m/m.0/Add\n net segment id: 0\n id: 26 type: 27\ntype name: Eltwise\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_6_m_m_0_Add -> _model_6_m_m_1_cv1_conv_Conv;
_model_6_m_m_0_Add -> _model_6_m_m_1_Add;
_model_6_m_m_1_cv1_conv_Conv [shape=box, label="/model.6/m/m.1/cv1/conv/Conv\n net segment id: 0\n id: 27 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_1_cv1_conv_Conv -> _model_6_m_m_1_cv2_conv_Conv;
_model_6_m_m_1_cv2_conv_Conv [shape=box, label="/model.6/m/m.1/cv2/conv/Conv\n net segment id: 0\n id: 28 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_1_cv2_conv_Conv -> _model_6_m_m_1_Add;
_model_6_m_m_1_Add [shape=box, label="/model.6/m/m.1/Add\n net segment id: 0\n id: 29 type: 27\ntype name: Eltwise\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_6_m_m_1_Add -> _model_6_m_m_2_cv1_conv_Conv;
_model_6_m_m_1_Add -> _model_6_m_m_2_Add;
_model_6_m_m_2_cv1_conv_Conv [shape=box, label="/model.6/m/m.2/cv1/conv/Conv\n net segment id: 0\n id: 30 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_2_cv1_conv_Conv -> _model_6_m_m_2_cv2_conv_Conv;
_model_6_m_m_2_cv2_conv_Conv [shape=box, label="/model.6/m/m.2/cv2/conv/Conv\n net segment id: 0\n id: 31 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_m_m_2_cv2_conv_Conv -> _model_6_m_m_2_Add;
_model_6_m_m_2_Add [shape=box, label="/model.6/m/m.2/Add\n net segment id: 0\n id: 32 type: 27\ntype name: Eltwise\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_6_m_m_2_Add -> _model_6_Concat;
_model_6_cv2_conv_Conv [shape=box, label="/model.6/cv2/conv/Conv\n net segment id: 0\n id: 33 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_cv2_conv_Conv -> _model_6_Concat;
_model_6_Concat [shape=box, label="/model.6/Concat\n net segment id: 0\n id: 34 type: 38\ntype name: Concat\n input size: 1*128*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_6_Concat -> _model_6_cv3_conv_Conv;
_model_6_cv3_conv_Conv [shape=box, label="/model.6/cv3/conv/Conv\n net segment id: 0\n id: 35 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_6_cv3_conv_Conv -> _model_7_conv_Conv;
_model_6_cv3_conv_Conv -> _model_12_Concat;
_model_7_conv_Conv [shape=box, label="/model.7/conv/Conv\n net segment id: 0\n id: 36 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_7_conv_Conv -> _model_8_cv1_conv_Conv;
_model_7_conv_Conv -> _model_8_cv2_conv_Conv;
_model_8_cv1_conv_Conv [shape=box, label="/model.8/cv1/conv/Conv\n net segment id: 0\n id: 37 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_8_cv1_conv_Conv -> _model_8_m_m_0_cv1_conv_Conv;
_model_8_cv1_conv_Conv -> _model_8_m_m_0_Add;
_model_8_m_m_0_cv1_conv_Conv [shape=box, label="/model.8/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 38 type: 0\ntype name: Convolution\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_8_m_m_0_cv1_conv_Conv -> _model_8_m_m_0_cv2_conv_Conv;
_model_8_m_m_0_cv2_conv_Conv [shape=box, label="/model.8/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 39 type: 0\ntype name: Convolution\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_8_m_m_0_cv2_conv_Conv -> _model_8_m_m_0_Add;
_model_8_m_m_0_Add [shape=box, label="/model.8/m/m.0/Add\n net segment id: 0\n id: 40 type: 27\ntype name: Eltwise\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_8_m_m_0_Add -> _model_8_Concat;
_model_8_cv2_conv_Conv [shape=box, label="/model.8/cv2/conv/Conv\n net segment id: 0\n id: 41 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_8_cv2_conv_Conv -> _model_8_Concat;
_model_8_Concat [shape=box, label="/model.8/Concat\n net segment id: 0\n id: 42 type: 38\ntype name: Concat\n input size: 1*256*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_8_Concat -> _model_8_cv3_conv_Conv;
_model_8_cv3_conv_Conv [shape=box, label="/model.8/cv3/conv/Conv\n net segment id: 0\n id: 43 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_8_cv3_conv_Conv -> _model_9_cv1_conv_Conv;
_model_9_cv1_conv_Conv [shape=box, label="/model.9/cv1/conv/Conv\n net segment id: 0\n id: 44 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_cv1_conv_Conv -> _model_9_m_MaxPool;
_model_9_cv1_conv_Conv -> _model_9_Concat_bridge_0_0;
_model_9_m_MaxPool [shape=box, label="/model.9/m/MaxPool\n net segment id: 0\n id: 45 type: 3\ntype name: PoolingMax\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_m_MaxPool -> _model_9_m_1_MaxPool;
_model_9_m_MaxPool -> _model_9_Concat_bridge_1_0;
_model_9_m_1_MaxPool [shape=box, label="/model.9/m_1/MaxPool\n net segment id: 0\n id: 46 type: 3\ntype name: PoolingMax\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_m_1_MaxPool -> _model_9_m_2_MaxPool;
_model_9_m_1_MaxPool -> _model_9_Concat_bridge_2_0;
_model_9_m_2_MaxPool [shape=box, label="/model.9/m_2/MaxPool\n net segment id: 0\n id: 47 type: 3\ntype name: PoolingMax\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_m_2_MaxPool -> _model_9_Concat;
_model_9_Concat_bridge_2_0 [shape=box, label="/model.9/Concat_bridge_2_0\n net segment id: 0\n id: 48 type: 48\ntype name: Nop\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_Concat_bridge_2_0 -> _model_9_Concat;
_model_9_Concat_bridge_1_0 [shape=box, label="/model.9/Concat_bridge_1_0\n net segment id: 0\n id: 49 type: 48\ntype name: Nop\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_Concat_bridge_1_0 -> _model_9_Concat;
_model_9_Concat_bridge_0_0 [shape=box, label="/model.9/Concat_bridge_0_0\n net segment id: 0\n id: 50 type: 48\ntype name: Nop\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_Concat_bridge_0_0 -> _model_9_Concat;
_model_9_Concat [shape=box, label="/model.9/Concat\n net segment id: 0\n id: 51 type: 38\ntype name: Concat\n input size: 1*256*20*20\n output size: 1*1024*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninDdr5dPitch[1]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninDdr5dPitch[2]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[2]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[2]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninDdr5dPitch[3]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[3]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[3]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0xa0, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0xa0, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]-[8]-[8]"];
_model_9_Concat -> _model_9_cv2_conv_Conv;
_model_9_cv2_conv_Conv [shape=box, label="/model.9/cv2/conv/Conv\n net segment id: 0\n id: 52 type: 0\ntype name: Convolution\n input size: 1*1024*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x64000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0xa0, 0x5000, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0xa0, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_9_cv2_conv_Conv -> _model_10_conv_Conv;
_model_10_conv_Conv [shape=box, label="/model.10/conv/Conv\n net segment id: 0\n id: 53 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_10_conv_Conv -> _model_11_Resize;
_model_10_conv_Conv -> _model_22_Concat_bridge_0_0;
_model_11_Resize [shape=box, label="/model.11/Resize\n net segment id: 0\n id: 54 type: 28\ntype name: Upsample\n input size: 1*256*20*20\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_11_Resize -> _model_12_Concat;
_model_22_Concat_bridge_0_0 [shape=box, label="/model.22/Concat_bridge_0_0\n net segment id: 0\n id: 55 type: 48\ntype name: Nop\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_22_Concat_bridge_0_0 -> _model_22_Concat;
_model_12_Concat [shape=box, label="/model.12/Concat\n net segment id: 0\n id: 56 type: 38\ntype name: Concat\n input size: 1*256*40*40\n output size: 1*512*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_12_Concat -> _model_13_cv1_conv_Conv;
_model_12_Concat -> _model_13_cv2_conv_Conv;
_model_13_cv1_conv_Conv [shape=box, label="/model.13/cv1/conv/Conv\n net segment id: 0\n id: 57 type: 0\ntype name: Convolution\n input size: 1*512*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0xc8000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_13_cv1_conv_Conv -> _model_13_m_m_0_cv1_conv_Conv;
_model_13_m_m_0_cv1_conv_Conv [shape=box, label="/model.13/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 58 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_13_m_m_0_cv1_conv_Conv -> _model_13_m_m_0_cv2_conv_Conv;
_model_13_m_m_0_cv2_conv_Conv [shape=box, label="/model.13/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 59 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_13_m_m_0_cv2_conv_Conv -> _model_13_Concat;
_model_13_cv2_conv_Conv [shape=box, label="/model.13/cv2/conv/Conv\n net segment id: 0\n id: 60 type: 0\ntype name: Convolution\n input size: 1*512*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0xc8000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_13_cv2_conv_Conv -> _model_13_Concat;
_model_13_Concat [shape=box, label="/model.13/Concat\n net segment id: 0\n id: 61 type: 38\ntype name: Concat\n input size: 1*128*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_13_Concat -> _model_13_cv3_conv_Conv;
_model_13_cv3_conv_Conv [shape=box, label="/model.13/cv3/conv/Conv\n net segment id: 0\n id: 62 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_13_cv3_conv_Conv -> _model_14_conv_Conv;
_model_14_conv_Conv [shape=box, label="/model.14/conv/Conv\n net segment id: 0\n id: 63 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_14_conv_Conv -> _model_15_Resize;
_model_14_conv_Conv -> _model_19_Concat_bridge_0_0;
_model_15_Resize [shape=box, label="/model.15/Resize\n net segment id: 0\n id: 64 type: 28\ntype name: Upsample\n input size: 1*128*40*40\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_15_Resize -> _model_16_Concat;
_model_19_Concat_bridge_0_0 [shape=box, label="/model.19/Concat_bridge_0_0\n net segment id: 0\n id: 65 type: 48\ntype name: Nop\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_19_Concat_bridge_0_0 -> _model_19_Concat;
_model_16_Concat [shape=box, label="/model.16/Concat\n net segment id: 0\n id: 66 type: 38\ntype name: Concat\n input size: 1*128*80*80\n output size: 1*256*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x190000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_16_Concat -> _model_17_cv1_conv_Conv;
_model_16_Concat -> _model_17_cv2_conv_Conv;
_model_17_cv1_conv_Conv [shape=box, label="/model.17/cv1/conv/Conv\n net segment id: 0\n id: 67 type: 0\ntype name: Convolution\n input size: 1*256*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x190000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_17_cv1_conv_Conv -> _model_17_m_m_0_cv1_conv_Conv;
_model_17_m_m_0_cv1_conv_Conv [shape=box, label="/model.17/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 68 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_17_m_m_0_cv1_conv_Conv -> _model_17_m_m_0_cv2_conv_Conv;
_model_17_m_m_0_cv2_conv_Conv [shape=box, label="/model.17/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 69 type: 0\ntype name: Convolution\n input size: 1*64*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_17_m_m_0_cv2_conv_Conv -> _model_17_Concat;
_model_17_cv2_conv_Conv [shape=box, label="/model.17/cv2/conv/Conv\n net segment id: 0\n id: 70 type: 0\ntype name: Convolution\n input size: 1*256*80*80\n output size: 1*64*80*80\ninDdr5dPitch[0]: (0x190000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_17_cv2_conv_Conv -> _model_17_Concat;
_model_17_Concat [shape=box, label="/model.17/Concat\n net segment id: 0\n id: 71 type: 38\ntype name: Concat\n input size: 1*64*80*80\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x64000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x280, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x500, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_17_Concat -> _model_17_cv3_conv_Conv;
_model_17_cv3_conv_Conv [shape=box, label="/model.17/cv3/conv/Conv\n net segment id: 0\n id: 72 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*128*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_17_cv3_conv_Conv -> _model_18_conv_Conv;
_model_17_cv3_conv_Conv -> _model_24_m_0_Conv;
_model_18_conv_Conv [shape=box, label="/model.18/conv/Conv\n net segment id: 0\n id: 73 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_18_conv_Conv -> _model_19_Concat;
_model_19_Concat [shape=box, label="/model.19/Concat\n net segment id: 0\n id: 74 type: 38\ntype name: Concat\n input size: 1*128*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_19_Concat -> _model_20_cv1_conv_Conv;
_model_19_Concat -> _model_20_cv2_conv_Conv;
_model_20_cv1_conv_Conv [shape=box, label="/model.20/cv1/conv/Conv\n net segment id: 0\n id: 75 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_20_cv1_conv_Conv -> _model_20_m_m_0_cv1_conv_Conv;
_model_20_m_m_0_cv1_conv_Conv [shape=box, label="/model.20/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 76 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_20_m_m_0_cv1_conv_Conv -> _model_20_m_m_0_cv2_conv_Conv;
_model_20_m_m_0_cv2_conv_Conv [shape=box, label="/model.20/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 77 type: 0\ntype name: Convolution\n input size: 1*128*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_20_m_m_0_cv2_conv_Conv -> _model_20_Concat;
_model_20_cv2_conv_Conv [shape=box, label="/model.20/cv2/conv/Conv\n net segment id: 0\n id: 78 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*128*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_20_cv2_conv_Conv -> _model_20_Concat;
_model_20_Concat [shape=box, label="/model.20/Concat\n net segment id: 0\n id: 79 type: 38\ntype name: Concat\n input size: 1*128*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x32000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0x140, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_20_Concat -> _model_20_cv3_conv_Conv;
_model_20_cv3_conv_Conv [shape=box, label="/model.20/cv3/conv/Conv\n net segment id: 0\n id: 80 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*256*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_20_cv3_conv_Conv -> _model_21_conv_Conv;
_model_20_cv3_conv_Conv -> _model_24_m_1_Conv;
_model_21_conv_Conv [shape=box, label="/model.21/conv/Conv\n net segment id: 0\n id: 81 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_21_conv_Conv -> _model_22_Concat;
_model_22_Concat [shape=box, label="/model.22/Concat\n net segment id: 0\n id: 82 type: 38\ntype name: Concat\n input size: 1*256*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_22_Concat -> _model_23_cv1_conv_Conv;
_model_22_Concat -> _model_23_cv2_conv_Conv;
_model_23_cv1_conv_Conv [shape=box, label="/model.23/cv1/conv/Conv\n net segment id: 0\n id: 83 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_23_cv1_conv_Conv -> _model_23_m_m_0_cv1_conv_Conv;
_model_23_m_m_0_cv1_conv_Conv [shape=box, label="/model.23/m/m.0/cv1/conv/Conv\n net segment id: 0\n id: 84 type: 0\ntype name: Convolution\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_23_m_m_0_cv1_conv_Conv -> _model_23_m_m_0_cv2_conv_Conv;
_model_23_m_m_0_cv2_conv_Conv [shape=box, label="/model.23/m/m.0/cv2/conv/Conv\n net segment id: 0\n id: 85 type: 0\ntype name: Convolution\n input size: 1*256*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_23_m_m_0_cv2_conv_Conv -> _model_23_Concat;
_model_23_cv2_conv_Conv [shape=box, label="/model.23/cv2/conv/Conv\n net segment id: 0\n id: 86 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*256*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_23_cv2_conv_Conv -> _model_23_Concat;
_model_23_Concat [shape=box, label="/model.23/Concat\n net segment id: 0\n id: 87 type: 38\ntype name: Concat\n input size: 1*256*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninDdr5dPitch[1]: (0x19000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[1]: (0x1400, 0xa0, 0x1400, 0x40, 0x8)\ninUbFromUb5dPitch[1]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]-[8-8]\n bond([ub-ub]): [8]-[8]-[8]"];
_model_23_Concat -> _model_23_cv3_conv_Conv;
_model_23_cv3_conv_Conv [shape=box, label="/model.23/cv3/conv/Conv\n net segment id: 0\n id: 88 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*512*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\noutDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\noutUbToDdr5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutUbToUb5dShape[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-8]\n bond([ub-ub]): [8]-[8]"];
_model_23_cv3_conv_Conv -> _model_24_m_2_Conv;
_model_24_m_2_Conv [shape=box, label="/model.24/m.2/Conv\n net segment id: 0\n id: 89 type: 0\ntype name: Convolution\n input size: 1*512*20*20\n output size: 1*255*20*20\ninDdr5dPitch[0]: (0x32000, 0xc80, 0xa0, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0xa0, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x140, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x3bc40, 0x3c0, 0x30, 0x10, 0x10)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x80, 0x10)\noutUbToUb5dShape[0]: (0x2800, 0x140, 0x2800, 0x80, 0x10)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-1]\n bond([ub-ub]): [8]-[8]"];
_model_24_m_2_Conv -> _model_24_m_2_Conv_report_0_0;
_model_24_m_2_Conv_report_0_0 [shape=box, label="/model.24/m.2/Conv_report_0_0\n net segment id: 0\n id: 90 type: 46\ntype name: Reportop\n input size: 1*255*20*20\n output size: 1*255*20*20\ninDdr5dPitch[0]: (0x3bc40, 0x3c0, 0x30, 0x10, 0x10)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x80, 0x10)\ninUbFromUb5dPitch[0]: (0x2800, 0x140, 0x2800, 0x80, 0x10)\noutDdr5dPitch[0]: (0x639c0, 0x640, 0x50, 0x20, 0x20)\noutUbToDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x80, 0x10)\noutUbToUb5dShape[0]: (0x1, 0x0, 0x0, 0x0, 0x0)\n bond([ddr-ub]-[ub-ddr]): [1-8]-[1-1]\n bond([ub-ub]): [8]-[1]"];
_model_24_m_1_Conv [shape=box, label="/model.24/m.1/Conv\n net segment id: 0\n id: 91 type: 0\ntype name: Convolution\n input size: 1*256*40*40\n output size: 1*255*40*40\ninDdr5dPitch[0]: (0x64000, 0x3200, 0x140, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x140, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0xc7380, 0xc80, 0x50, 0x10, 0x10)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x80, 0x10)\noutUbToUb5dShape[0]: (0x5000, 0x280, 0x5000, 0x80, 0x10)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-1]\n bond([ub-ub]): [8]-[8]"];
_model_24_m_1_Conv -> _model_24_m_1_Conv_report_0_1;
_model_24_m_1_Conv_report_0_1 [shape=box, label="/model.24/m.1/Conv_report_0_1\n net segment id: 0\n id: 92 type: 46\ntype name: Reportop\n input size: 1*255*40*40\n output size: 1*255*40*40\ninDdr5dPitch[0]: (0xc7380, 0xc80, 0x50, 0x10, 0x10)\ninUbFromDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x80, 0x10)\ninUbFromUb5dPitch[0]: (0x5000, 0x280, 0x5000, 0x80, 0x10)\noutDdr5dPitch[0]: (0x18e700, 0x1900, 0xa0, 0x20, 0x20)\noutUbToDdr5dPitch[0]: (0x5000, 0x280, 0x5000, 0x80, 0x10)\noutUbToUb5dShape[0]: (0x1, 0x0, 0x0, 0x0, 0x0)\n bond([ddr-ub]-[ub-ddr]): [1-8]-[1-1]\n bond([ub-ub]): [8]-[1]"];
_model_24_m_0_Conv [shape=box, label="/model.24/m.0/Conv\n net segment id: 0\n id: 93 type: 0\ntype name: Convolution\n input size: 1*128*80*80\n output size: 1*255*80*80\ninDdr5dPitch[0]: (0xc8000, 0xc800, 0x280, 0x40, 0x8)\ninUbFromDdr5dPitch[0]: (0x2800, 0x280, 0x2800, 0x40, 0x8)\ninUbFromUb5dPitch[0]: (0x5000, 0x500, 0x5000, 0x40, 0x8)\noutDdr5dPitch[0]: (0x31ce00, 0x3200, 0xa0, 0x10, 0x10)\noutUbToDdr5dPitch[0]: (0xa000, 0x500, 0xa000, 0x80, 0x10)\noutUbToUb5dShape[0]: (0xa000, 0x500, 0xa000, 0x80, 0x10)\n bond([ddr-ub]-[ub-ddr]): [8-8]-[8-1]\n bond([ub-ub]): [8]-[8]"];
_model_24_m_0_Conv -> _model_24_m_0_Conv_report_0_2;
_model_24_m_0_Conv_report_0_2 [shape=box, label="/model.24/m.0/Conv_report_0_2\n net segment id: 0\n id: 94 type: 46\ntype name: Reportop\n input size: 1*255*80*80\n output size: 1*255*80*80\ninDdr5dPitch[0]: (0x31ce00, 0x3200, 0xa0, 0x10, 0x10)\ninUbFromDdr5dPitch[0]: (0xa000, 0x500, 0xa000, 0x80, 0x10)\ninUbFromUb5dPitch[0]: (0xa000, 0x500, 0xa000, 0x80, 0x10)\noutDdr5dPitch[0]: (0x639c00, 0x6400, 0x140, 0x20, 0x20)\noutUbToDdr5dPitch[0]: (0xa000, 0x500, 0xa000, 0x80, 0x10)\noutUbToUb5dShape[0]: (0x1, 0x0, 0x0, 0x0, 0x0)\n bond([ddr-ub]-[ub-ddr]): [1-8]-[1-1]\n bond([ub-ub]): [8]-[1]"];
}
